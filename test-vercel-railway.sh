#!/bin/bash

echo "üß™ TEST R√ÅPIDO TOOLITEX VERCEL ‚Üî RAILWAY"
echo "========================================"
echo ""

RAILWAY_URL="https://toolitexah-production.up.railway.app"
VERCEL_URL="https://toolitex-ah.vercel.app"

echo "‚úÖ Tus URLs confirmadas:"
echo "üì¶ Backend (Railway): $RAILWAY_URL"
echo "üî∫ Frontend (Vercel): $VERCEL_URL"
echo ""

# Test Backend
echo "1Ô∏è‚É£ Probando backend..."
response=$(curl -s "$RAILWAY_URL/")
if [[ "$response" == *"API funcionando"* ]]; then
    echo "‚úÖ Backend OK"
else
    echo "‚ùå Backend FAIL: $response"
fi

# Test CORS
echo ""
echo "2Ô∏è‚É£ Probando CORS desde Vercel..."
response=$(curl -s -X POST "$RAILWAY_URL/api/auth/register" \
  -H "Content-Type: application/json" \
  -H "Origin: $VERCEL_URL" \
  -d '{"name":"TestUser","email":"test@test.com","password":"TestPass123@"}' \
  -w "%{http_code}")

http_code="${response: -3}"
if [[ "$http_code" == "200" ]] || [[ "$http_code" == "400" ]]; then
    echo "‚úÖ CORS OK (Status: $http_code)"
else
    echo "‚ùå CORS FAIL (Status: $http_code)"
fi

# Test Frontend
echo ""
echo "3Ô∏è‚É£ Probando frontend..."
response=$(curl -s -w "%{http_code}" "$VERCEL_URL/" | tail -c 3)
if [[ "$response" == "200" ]]; then
    echo "‚úÖ Frontend OK"
else
    echo "‚ùå Frontend FAIL (Status: $response)"
fi

echo ""
echo "üìã PR√ìXIMOS PASOS:"
echo "1. Ve a Vercel ‚Üí Settings ‚Üí Environment Variables"
echo "2. Configura: REACT_APP_API_URL=$RAILWAY_URL"
echo "3. Redeploy en Vercel"
echo "4. Intenta registrarte desde $VERCEL_URL"
echo ""
echo "üÜò Si sigue fallando, abre DevTools (F12) y revisa:"
echo "- Console tab para errores de JavaScript"
echo "- Network tab para ver qu√© URL se est√° llamando"
